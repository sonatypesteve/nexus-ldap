#!/bin/bash

INPUT="dyngroups.txt"
OUTPUT="../ldifs/01-dyngroup.ldif"

generate_header() {
  echo "# OpenLDAP Dynamic Groups LDIF File"
  echo "# Generated by dyngroup.sh on $(date)"
  echo "#"
  echo "# This file can be imported into OpenLDAP using ldapadd:"
  echo "# ldapadd -x -D \"cn=admin,dc=example,dc=com\" -w your_admin_password -f <this_file.ldif>"
  echo "#"
  echo "# Ensure that your LDAP schema supports the 'groupOfURLs' objectClass"
  echo "# and that your user entries have an 'employeeType' attribute."
  echo ""
}

generate_group_ldif() {
  local group="$1"
  group="$(echo "$group" | tr -d '\r' | xargs)" # Remove \r and trim whitespace
  local dn_group=$(echo "$group" | sed 's/ /\\ /g')
  echo "# --- Dynamic Group: $group ---"
  echo "dn: cn=$dn_group,ou=groups,dc=example,dc=com"
  echo "objectClass: groupOfURLs"
  echo "cn: $group"
  echo "memberURL: ldap:///ou=users,dc=example,dc=com??sub?(&(objectClass=inetOrgPerson)(employeeType=$group))"
  echo ""
}

generate_footer() {
  echo "# --- End of LDIF File ---"
}

main() {
  generate_header > "$OUTPUT"
  while IFS= read -r group || [ -n "$group" ]; do
    group="$(echo "$group" | tr -d '\r' | xargs)" # Remove \r and trim whitespace
    [ -z "$group" ] && continue
    generate_group_ldif "$group" >> "$OUTPUT"
  done < "$INPUT"
  generate_footer >> "$OUTPUT"
}

main
